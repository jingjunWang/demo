<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:mvc="http://www.springframework.org/schema/mvc" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:p="http://www.springframework.org/schema/p" 
xmlns:context="http://www.springframework.org/schema/context" 
xmlns:task="http://www.springframework.org/schema/task"
xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-4.0.xsd 
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
http://www.springframework.org/schema/task     
http://www.springframework.org/schema/task/spring-task-4.0.xsd">

     <!-- 配置注解扫描 -->
    <context:annotation-config />
<!-- 配置MVC  返回MAP 问题 -->
 <!-- 添加注解驱动 -->  
<mvc:annotation-driven/>
		<!-- 配置应该写在controller的扫描配置之前 配置JSON  注解@ResponseBody 乱码问题text/plain;charset=UTF-8  -->
<bean  
    class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
  <!--   配置LIST转JSON   -->
    <property name = "cacheSeconds" value = "0" />   
    <property name="messageConverters">  
        <list>  
            <bean  
                class="org.springframework.http.converter.StringHttpMessageConverter">  
                <property name="supportedMediaTypes">  
                    <list>  
                        <bean class="org.springframework.http.MediaType">  
                            <constructor-arg index="0" value="text" />  
                            <constructor-arg index="1" value="plain" />  
                            <constructor-arg index="2" value="UTF-8" />  
                        </bean>  
                    </list>  
                </property>  
            </bean>  
            <bean class = "org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" ></bean >   
        </list>  
    </property>  
</bean> 
	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<context:component-scan base-package="com.*.action" />
	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/" p:suffix=".jsp" />
	<bean class="demo.utility.InitializeService"></bean>
	
	<!-- <bean class="waimai.papajohns.posweb.service.MailMaps"></bean> -->
	<!-- 用判断当前外卖集合里面的产品是否发送过期 需要发送邮件 当前实体类 用来启动线程来查找产品 -->
<!-- 	<bean class="waimai.mail.StartMail"></bean> -->
	<bean id="multipartResolver" 
         class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         <property  name="maxUploadSize" value="10485760"/>    <!--设置文件上传最大值字节：-->
 	</bean>
	
<!-- 静态文件访问,主要是针对DispatcherServlet的拦截是/的--> <!-- //<mvc:annotation-driven />  -->
<mvc:resources location="/js/" mapping="/js/**"/>	
<mvc:resources location="/img/" mapping="/img/**"/>
<mvc:resources location="/jsp/" mapping="/jsp/**"/>	
<mvc:resources location="/dist/" mapping="/dist/**"/>	
<mvc:resources location="/weixin/" mapping="/weixin/**"/>	
<bean id="timer" class="com.demo.timers.Timer" scope="prototype"></bean>
<!-- 构造一个定时器 -->
<bean id="schedule" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
       <property name="triggers">
              <list>
                 <ref bean="testTrigger1"/>
              </list>
         </property>
</bean>

<!-- 设置这个定时器然后 时间 -->
 <bean id="testTrigger1" class="org.springframework.scheduling.quartz.CronTriggerBean">
 			<!-- 定时指定的类方法 bean -->
          <property name="jobDetail" ref="testJobDetail1" />
          <!-- 设置时间 -->
          <property name="cronExpression" value="0/10 * * * * ?" />
 </bean>
<!--  指定这个定时任务 调用那个类 里面的那个方法 -->
 <bean id="testJobDetail1" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
         	<!-- 类名 -->
          <property name="targetObject" ref="timer" />
          <!-- 方法名 -->
          <property name="targetMethod" value="time" />
 </bean>

	
</beans>